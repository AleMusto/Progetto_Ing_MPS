{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alessandro\\\\Code\\\\web-projects\\\\test-site\\\\Progetto Ingegneria\\\\frontend\\\\src\\\\components\\\\AccordionResponsabile.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './AccordionResponsabile.css';\nimport CompilaPattern from '../pages/CompilaPattern';\nimport { PropTypes } from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AccordionResponsabile = ({\n  items,\n  singlePattern,\n  keepOthersOpen,\n  stato\n}) => {\n  _s();\n  const [accordionItems, setAccordionItems] = useState([]);\n  const [filtri, setFiltri] = useState([]);\n\n  // Initialize accordion items when items prop changes\n  useEffect(() => {\n    if (items) {\n      const newAccordionItems = items.map(item => ({\n        ...item,\n        toggled: false,\n        checkedItems: new Array(item.campi.length).fill(false)\n      }));\n      setAccordionItems(newAccordionItems);\n    }\n  }, [items]);\n\n  // Update checked items based on singlePattern\n  useEffect(() => {\n    if (singlePattern !== null && singlePattern !== void 0 && singlePattern.attributes && accordionItems.length > 0) {\n      const singlePatternFields = {};\n      Object.keys(singlePattern.attributes).forEach(key => {\n        var _singlePattern$attrib;\n        if (Array.isArray((_singlePattern$attrib = singlePattern.attributes[key]) === null || _singlePattern$attrib === void 0 ? void 0 : _singlePattern$attrib.data)) {\n          singlePatternFields[key] = singlePattern.attributes[key].data.map(item => item.id);\n        }\n      });\n      const updatedAccordionItems = accordionItems.map(item => {\n        const checkedItems = item.id_campi.map(id_campo => {\n          var _singlePatternFields$;\n          return ((_singlePatternFields$ = singlePatternFields[item.label]) === null || _singlePatternFields$ === void 0 ? void 0 : _singlePatternFields$.includes(id_campo)) || false;\n        });\n        return {\n          ...item,\n          checkedItems\n        };\n      });\n      setAccordionItems(updatedAccordionItems);\n    }\n  }, [singlePattern]);\n  const handleAccordionToggle = clickedItem => {\n    setAccordionItems(prevItems => prevItems.map(item => ({\n      ...item,\n      toggled: item.id === clickedItem.id ? !item.toggled : keepOthersOpen ? item.toggled : false\n    })));\n  };\n  const handleCheckboxChange = (itemId, index) => {\n    setAccordionItems(prevItems => prevItems.map(item => {\n      if (item.id === itemId) {\n        const checkedItems = [...item.checkedItems];\n        checkedItems[index] = !checkedItems[index];\n\n        // Update filtri state\n        const updatedFiltri = filtri.filter(filtro => filtro.label !== item.label);\n        const selectedFields = checkedItems.reduce((acc, isChecked, i) => {\n          if (isChecked) {\n            acc.push({\n              campo: item.campi[i],\n              id_campo: item.id_campi[i]\n            });\n          }\n          return acc;\n        }, []);\n        if (selectedFields.length > 0) {\n          updatedFiltri.push({\n            label: item.label,\n            checkedItems: selectedFields\n          });\n        }\n        setFiltri(updatedFiltri);\n        return {\n          ...item,\n          checkedItems\n        };\n      }\n      return item;\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"side-menu\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"accordion-parent\",\n        children: accordionItems.map((listItem, key) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `accordion ${listItem.toggled ? 'toggled' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"toggle\",\n            onClick: () => handleAccordionToggle(listItem),\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: listItem.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"direction-indicator\",\n              children: listItem.toggled ? '-' : '+'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content-parent\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"content\",\n              children: listItem.toggled && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: listItem.campi.map((campo, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    id: `${campo}-${index}`,\n                    name: campo,\n                    value: campo,\n                    checked: listItem.checkedItems[index],\n                    onChange: () => handleCheckboxChange(listItem.id, index),\n                    className: \"custom-checkbox\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: `${campo}-${index}`,\n                    className: \"custom-checkbox-label\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: campo\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 121,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 27\n                  }, this)]\n                }, campo.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)]\n        }, listItem.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pattern-form-container\",\n      children: /*#__PURE__*/_jsxDEV(CompilaPattern, {\n        filtri: filtri,\n        singlePattern: singlePattern,\n        stato: stato\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(AccordionResponsabile, \"dJFvGKtYD6l2vAUUZaDvlv1jAuo=\");\n_c = AccordionResponsabile;\nexport default AccordionResponsabile;\nAccordionResponsabile.propTypes = {\n  items: PropTypes.array.isRequired,\n  keepOthersOpen: PropTypes.bool.isRequired,\n  singlePattern: PropTypes.object,\n  stato: PropTypes.string.isRequired\n};\nvar _c;\n$RefreshReg$(_c, \"AccordionResponsabile\");","map":{"version":3,"names":["React","useEffect","useState","CompilaPattern","PropTypes","jsxDEV","_jsxDEV","AccordionResponsabile","items","singlePattern","keepOthersOpen","stato","_s","accordionItems","setAccordionItems","filtri","setFiltri","newAccordionItems","map","item","toggled","checkedItems","Array","campi","length","fill","attributes","singlePatternFields","Object","keys","forEach","key","_singlePattern$attrib","isArray","data","id","updatedAccordionItems","id_campi","id_campo","_singlePatternFields$","label","includes","handleAccordionToggle","clickedItem","prevItems","handleCheckboxChange","itemId","index","updatedFiltri","filter","filtro","selectedFields","reduce","acc","isChecked","i","push","campo","className","children","listItem","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","name","value","checked","onChange","htmlFor","_c","propTypes","array","isRequired","bool","object","string","$RefreshReg$"],"sources":["C:/Users/Alessandro/Code/web-projects/test-site/Progetto Ingegneria/frontend/src/components/AccordionResponsabile.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './AccordionResponsabile.css';\r\nimport CompilaPattern from '../pages/CompilaPattern';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nconst AccordionResponsabile = ({ items, singlePattern, keepOthersOpen, stato }) => {\r\n  const [accordionItems, setAccordionItems] = useState([]);\r\n  const [filtri, setFiltri] = useState([]);\r\n\r\n  // Initialize accordion items when items prop changes\r\n  useEffect(() => {\r\n    if (items) {\r\n      const newAccordionItems = items.map(item => ({\r\n        ...item,\r\n        toggled: false,\r\n        checkedItems: new Array(item.campi.length).fill(false)\r\n      }));\r\n      setAccordionItems(newAccordionItems);\r\n    }\r\n  }, [items]);\r\n\r\n  // Update checked items based on singlePattern\r\n  useEffect(() => {\r\n    if (singlePattern?.attributes && accordionItems.length > 0) {\r\n      const singlePatternFields = {};\r\n\r\n      Object.keys(singlePattern.attributes).forEach(key => {\r\n        if (Array.isArray(singlePattern.attributes[key]?.data)) {\r\n          singlePatternFields[key] = singlePattern.attributes[key].data.map(item => item.id);\r\n        }\r\n      });\r\n\r\n      const updatedAccordionItems = accordionItems.map(item => {\r\n        const checkedItems = item.id_campi.map(id_campo => {\r\n          return singlePatternFields[item.label]?.includes(id_campo) || false;\r\n        });\r\n\r\n        return {\r\n          ...item,\r\n          checkedItems\r\n        };\r\n      });\r\n\r\n      setAccordionItems(updatedAccordionItems);\r\n    }\r\n  }, [singlePattern]);\r\n\r\n  const handleAccordionToggle = (clickedItem) => {\r\n    setAccordionItems(prevItems =>\r\n      prevItems.map(item => ({\r\n        ...item,\r\n        toggled: item.id === clickedItem.id ? !item.toggled : (keepOthersOpen ? item.toggled : false)\r\n      }))\r\n    );\r\n  };\r\n\r\n  const handleCheckboxChange = (itemId, index) => {\r\n    setAccordionItems(prevItems =>\r\n      prevItems.map(item => {\r\n        if (item.id === itemId) {\r\n          const checkedItems = [...item.checkedItems];\r\n          checkedItems[index] = !checkedItems[index];\r\n\r\n          // Update filtri state\r\n          const updatedFiltri = filtri.filter(filtro => filtro.label !== item.label);\r\n          const selectedFields = checkedItems.reduce((acc, isChecked, i) => {\r\n            if (isChecked) {\r\n              acc.push({\r\n                campo: item.campi[i],\r\n                id_campo: item.id_campi[i]\r\n              });\r\n            }\r\n            return acc;\r\n          }, []);\r\n\r\n          if (selectedFields.length > 0) {\r\n            updatedFiltri.push({\r\n              label: item.label,\r\n              checkedItems: selectedFields\r\n            });\r\n          }\r\n\r\n          setFiltri(updatedFiltri);\r\n\r\n          return {\r\n            ...item,\r\n            checkedItems\r\n          };\r\n        }\r\n        return item;\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className='container'>\r\n      <div className='side-menu'>\r\n        <div className='accordion-parent'>\r\n          {accordionItems.map((listItem, key) => (\r\n            <div className={`accordion ${listItem.toggled ? 'toggled' : ''}`} key={listItem.id}>\r\n              <button className='toggle' onClick={() => handleAccordionToggle(listItem)}>\r\n                <p>{listItem.label}</p>\r\n                <div className='direction-indicator'>{listItem.toggled ? '-' : '+'}</div>\r\n              </button>\r\n              <div className='content-parent'>\r\n                <div className='content'>\r\n                  {listItem.toggled && (\r\n                    <div>\r\n                      {listItem.campi.map((campo, index) => (\r\n                        <div key={campo.id}>\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            id={`${campo}-${index}`}\r\n                            name={campo}\r\n                            value={campo}\r\n                            checked={listItem.checkedItems[index]}\r\n                            onChange={() => handleCheckboxChange(listItem.id, index)}\r\n                            className=\"custom-checkbox\"\r\n                          />\r\n                          <label htmlFor={`${campo}-${index}`} className=\"custom-checkbox-label\">\r\n                            <span>{campo}</span>\r\n                          </label>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className='pattern-form-container'>\r\n        <CompilaPattern filtri={filtri} singlePattern={singlePattern} stato={stato} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AccordionResponsabile;\r\n\r\nAccordionResponsabile.propTypes = {\r\n  items: PropTypes.array.isRequired,\r\n  keepOthersOpen: PropTypes.bool.isRequired,\r\n  singlePattern: PropTypes.object,\r\n  stato: PropTypes.string.isRequired\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,6BAA6B;AACpC,OAAOC,cAAc,MAAM,yBAAyB;AACpD,SAASC,SAAS,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,qBAAqB,GAAGA,CAAC;EAAEC,KAAK;EAAEC,aAAa;EAAEC,cAAc;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EACjF,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;;EAExC;EACAD,SAAS,CAAC,MAAM;IACd,IAAIO,KAAK,EAAE;MACT,MAAMS,iBAAiB,GAAGT,KAAK,CAACU,GAAG,CAACC,IAAI,KAAK;QAC3C,GAAGA,IAAI;QACPC,OAAO,EAAE,KAAK;QACdC,YAAY,EAAE,IAAIC,KAAK,CAACH,IAAI,CAACI,KAAK,CAACC,MAAM,CAAC,CAACC,IAAI,CAAC,KAAK;MACvD,CAAC,CAAC,CAAC;MACHX,iBAAiB,CAACG,iBAAiB,CAAC;IACtC;EACF,CAAC,EAAE,CAACT,KAAK,CAAC,CAAC;;EAEX;EACAP,SAAS,CAAC,MAAM;IACd,IAAIQ,aAAa,aAAbA,aAAa,eAAbA,aAAa,CAAEiB,UAAU,IAAIb,cAAc,CAACW,MAAM,GAAG,CAAC,EAAE;MAC1D,MAAMG,mBAAmB,GAAG,CAAC,CAAC;MAE9BC,MAAM,CAACC,IAAI,CAACpB,aAAa,CAACiB,UAAU,CAAC,CAACI,OAAO,CAACC,GAAG,IAAI;QAAA,IAAAC,qBAAA;QACnD,IAAIV,KAAK,CAACW,OAAO,EAAAD,qBAAA,GAACvB,aAAa,CAACiB,UAAU,CAACK,GAAG,CAAC,cAAAC,qBAAA,uBAA7BA,qBAAA,CAA+BE,IAAI,CAAC,EAAE;UACtDP,mBAAmB,CAACI,GAAG,CAAC,GAAGtB,aAAa,CAACiB,UAAU,CAACK,GAAG,CAAC,CAACG,IAAI,CAAChB,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACgB,EAAE,CAAC;QACpF;MACF,CAAC,CAAC;MAEF,MAAMC,qBAAqB,GAAGvB,cAAc,CAACK,GAAG,CAACC,IAAI,IAAI;QACvD,MAAME,YAAY,GAAGF,IAAI,CAACkB,QAAQ,CAACnB,GAAG,CAACoB,QAAQ,IAAI;UAAA,IAAAC,qBAAA;UACjD,OAAO,EAAAA,qBAAA,GAAAZ,mBAAmB,CAACR,IAAI,CAACqB,KAAK,CAAC,cAAAD,qBAAA,uBAA/BA,qBAAA,CAAiCE,QAAQ,CAACH,QAAQ,CAAC,KAAI,KAAK;QACrE,CAAC,CAAC;QAEF,OAAO;UACL,GAAGnB,IAAI;UACPE;QACF,CAAC;MACH,CAAC,CAAC;MAEFP,iBAAiB,CAACsB,qBAAqB,CAAC;IAC1C;EACF,CAAC,EAAE,CAAC3B,aAAa,CAAC,CAAC;EAEnB,MAAMiC,qBAAqB,GAAIC,WAAW,IAAK;IAC7C7B,iBAAiB,CAAC8B,SAAS,IACzBA,SAAS,CAAC1B,GAAG,CAACC,IAAI,KAAK;MACrB,GAAGA,IAAI;MACPC,OAAO,EAAED,IAAI,CAACgB,EAAE,KAAKQ,WAAW,CAACR,EAAE,GAAG,CAAChB,IAAI,CAACC,OAAO,GAAIV,cAAc,GAAGS,IAAI,CAACC,OAAO,GAAG;IACzF,CAAC,CAAC,CACJ,CAAC;EACH,CAAC;EAED,MAAMyB,oBAAoB,GAAGA,CAACC,MAAM,EAAEC,KAAK,KAAK;IAC9CjC,iBAAiB,CAAC8B,SAAS,IACzBA,SAAS,CAAC1B,GAAG,CAACC,IAAI,IAAI;MACpB,IAAIA,IAAI,CAACgB,EAAE,KAAKW,MAAM,EAAE;QACtB,MAAMzB,YAAY,GAAG,CAAC,GAAGF,IAAI,CAACE,YAAY,CAAC;QAC3CA,YAAY,CAAC0B,KAAK,CAAC,GAAG,CAAC1B,YAAY,CAAC0B,KAAK,CAAC;;QAE1C;QACA,MAAMC,aAAa,GAAGjC,MAAM,CAACkC,MAAM,CAACC,MAAM,IAAIA,MAAM,CAACV,KAAK,KAAKrB,IAAI,CAACqB,KAAK,CAAC;QAC1E,MAAMW,cAAc,GAAG9B,YAAY,CAAC+B,MAAM,CAAC,CAACC,GAAG,EAAEC,SAAS,EAAEC,CAAC,KAAK;UAChE,IAAID,SAAS,EAAE;YACbD,GAAG,CAACG,IAAI,CAAC;cACPC,KAAK,EAAEtC,IAAI,CAACI,KAAK,CAACgC,CAAC,CAAC;cACpBjB,QAAQ,EAAEnB,IAAI,CAACkB,QAAQ,CAACkB,CAAC;YAC3B,CAAC,CAAC;UACJ;UACA,OAAOF,GAAG;QACZ,CAAC,EAAE,EAAE,CAAC;QAEN,IAAIF,cAAc,CAAC3B,MAAM,GAAG,CAAC,EAAE;UAC7BwB,aAAa,CAACQ,IAAI,CAAC;YACjBhB,KAAK,EAAErB,IAAI,CAACqB,KAAK;YACjBnB,YAAY,EAAE8B;UAChB,CAAC,CAAC;QACJ;QAEAnC,SAAS,CAACgC,aAAa,CAAC;QAExB,OAAO;UACL,GAAG7B,IAAI;UACPE;QACF,CAAC;MACH;MACA,OAAOF,IAAI;IACb,CAAC,CACH,CAAC;EACH,CAAC;EAED,oBACEb,OAAA;IAAKoD,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBrD,OAAA;MAAKoD,SAAS,EAAC,WAAW;MAAAC,QAAA,eACxBrD,OAAA;QAAKoD,SAAS,EAAC,kBAAkB;QAAAC,QAAA,EAC9B9C,cAAc,CAACK,GAAG,CAAC,CAAC0C,QAAQ,EAAE7B,GAAG,kBAChCzB,OAAA;UAAKoD,SAAS,EAAE,aAAaE,QAAQ,CAACxC,OAAO,GAAG,SAAS,GAAG,EAAE,EAAG;UAAAuC,QAAA,gBAC/DrD,OAAA;YAAQoD,SAAS,EAAC,QAAQ;YAACG,OAAO,EAAEA,CAAA,KAAMnB,qBAAqB,CAACkB,QAAQ,CAAE;YAAAD,QAAA,gBACxErD,OAAA;cAAAqD,QAAA,EAAIC,QAAQ,CAACpB;YAAK;cAAAsB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACvB3D,OAAA;cAAKoD,SAAS,EAAC,qBAAqB;cAAAC,QAAA,EAAEC,QAAQ,CAACxC,OAAO,GAAG,GAAG,GAAG;YAAG;cAAA0C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnE,CAAC,eACT3D,OAAA;YAAKoD,SAAS,EAAC,gBAAgB;YAAAC,QAAA,eAC7BrD,OAAA;cAAKoD,SAAS,EAAC,SAAS;cAAAC,QAAA,EACrBC,QAAQ,CAACxC,OAAO,iBACfd,OAAA;gBAAAqD,QAAA,EACGC,QAAQ,CAACrC,KAAK,CAACL,GAAG,CAAC,CAACuC,KAAK,EAAEV,KAAK,kBAC/BzC,OAAA;kBAAAqD,QAAA,gBACErD,OAAA;oBACE4D,IAAI,EAAC,UAAU;oBACf/B,EAAE,EAAE,GAAGsB,KAAK,IAAIV,KAAK,EAAG;oBACxBoB,IAAI,EAAEV,KAAM;oBACZW,KAAK,EAAEX,KAAM;oBACbY,OAAO,EAAET,QAAQ,CAACvC,YAAY,CAAC0B,KAAK,CAAE;oBACtCuB,QAAQ,EAAEA,CAAA,KAAMzB,oBAAoB,CAACe,QAAQ,CAACzB,EAAE,EAAEY,KAAK,CAAE;oBACzDW,SAAS,EAAC;kBAAiB;oBAAAI,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC5B,CAAC,eACF3D,OAAA;oBAAOiE,OAAO,EAAE,GAAGd,KAAK,IAAIV,KAAK,EAAG;oBAACW,SAAS,EAAC,uBAAuB;oBAAAC,QAAA,eACpErD,OAAA;sBAAAqD,QAAA,EAAOF;oBAAK;sBAAAK,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAO;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACf,CAAC;gBAAA,GAZAR,KAAK,CAACtB,EAAE;kBAAA2B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAab,CACN;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC;YACN;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA,GA5B+DL,QAAQ,CAACzB,EAAE;UAAA2B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OA6B7E,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACN3D,OAAA;MAAKoD,SAAS,EAAC,wBAAwB;MAAAC,QAAA,eACrCrD,OAAA,CAACH,cAAc;QAACY,MAAM,EAAEA,MAAO;QAACN,aAAa,EAAEA,aAAc;QAACE,KAAK,EAAEA;MAAM;QAAAmD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3E,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACrD,EAAA,CApIIL,qBAAqB;AAAAiE,EAAA,GAArBjE,qBAAqB;AAsI3B,eAAeA,qBAAqB;AAEpCA,qBAAqB,CAACkE,SAAS,GAAG;EAChCjE,KAAK,EAAEJ,SAAS,CAACsE,KAAK,CAACC,UAAU;EACjCjE,cAAc,EAAEN,SAAS,CAACwE,IAAI,CAACD,UAAU;EACzClE,aAAa,EAAEL,SAAS,CAACyE,MAAM;EAC/BlE,KAAK,EAAEP,SAAS,CAAC0E,MAAM,CAACH;AAC1B,CAAC;AAAA,IAAAH,EAAA;AAAAO,YAAA,CAAAP,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}