{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alessandro\\\\Code\\\\web-projects\\\\test-site\\\\Progetto Ingegneria\\\\frontend\\\\src\\\\components\\\\Accordion.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './Accordion.css';\nimport PatternList from '../View/PatternList';\nimport { getPatterns } from '../Model/Query';\nimport { PropTypes } from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Accordion = ({\n  items,\n  keepOthersOpen\n}) => {\n  _s();\n  const [accordionItems, setAccordionItems] = useState(null);\n  const [filtri, setFiltri] = useState([]);\n  useEffect(() => {\n    if (items) {\n      setAccordionItems(items.map(item => ({\n        ...item,\n        toggled: false,\n        checkedItems: new Array(item.campi.length).fill(false) // Inizializza lo stato delle checkbox\n      })));\n    }\n  }, [items]);\n  const handleAccordionToggle = clickedItem => {\n    setAccordionItems(accordionItems.map(item => {\n      let toggled = item.toggled;\n      if (clickedItem.id === item.id) {\n        toggled = !item.toggled;\n      } else if (!keepOthersOpen) {\n        toggled = false;\n      }\n      return {\n        ...item,\n        toggled\n      };\n    }));\n  };\n  const handleCheckboxChange = (itemId, index) => {\n    setAccordionItems(accordionItems.map(item => {\n      if (item.id === itemId) {\n        const checkedItems = [...item.checkedItems];\n        checkedItems[index] = !checkedItems[index];\n\n        // Aggiorna i filtri\n        const updatedFiltri = filtri.filter(filtro => filtro.label !== item.label);\n        const selectedFields = checkedItems.reduce((acc, isChecked, i) => {\n          if (isChecked) {\n            acc.push(item.campi[i]);\n          }\n          return acc;\n        }, []);\n        if (selectedFields.length > 0) {\n          updatedFiltri.push({\n            label: item.label,\n            checkedItems: selectedFields\n          });\n        }\n        setFiltri(updatedFiltri);\n        return {\n          ...item,\n          checkedItems\n        };\n      }\n      return item;\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"side-menu\",\n      children: [\"Filtra i pattern per le tue esigenze\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"accordion-parent\",\n        children: accordionItems === null || accordionItems === void 0 ? void 0 : accordionItems.map((listItem, key) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `accordion ${listItem.toggled ? 'toggled' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"toggle\",\n            onClick: () => handleAccordionToggle(listItem),\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: listItem.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"direction-indicator\",\n              children: listItem.toggled ? '-' : '+'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content-parent\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"content\",\n              children: listItem.toggled && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: listItem.campi.map((campo, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    id: `${campo}-${index}`,\n                    name: campo,\n                    value: campo,\n                    checked: listItem.checkedItems[index],\n                    onChange: () => handleCheckboxChange(listItem.id, index),\n                    className: \"custom-checkbox\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: `${campo}-${index}`,\n                    className: \"custom-checkbox-label\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: campo\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 98,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 27\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(PatternList, {\n        filtri: filtri,\n        query: getPatterns,\n        user: null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(Accordion, \"U3RSCCleCNhXQQe08xI5OPI/TxA=\");\n_c = Accordion;\nexport default Accordion;\nAccordion.propTypes = {\n  items: PropTypes.array.isRequired,\n  keepOthersOpen: PropTypes.bool.isRequired\n};\nvar _c;\n$RefreshReg$(_c, \"Accordion\");","map":{"version":3,"names":["React","useEffect","useState","PatternList","getPatterns","PropTypes","jsxDEV","_jsxDEV","Accordion","items","keepOthersOpen","_s","accordionItems","setAccordionItems","filtri","setFiltri","map","item","toggled","checkedItems","Array","campi","length","fill","handleAccordionToggle","clickedItem","id","handleCheckboxChange","itemId","index","updatedFiltri","filter","filtro","label","selectedFields","reduce","acc","isChecked","i","push","className","children","listItem","key","onClick","fileName","_jsxFileName","lineNumber","columnNumber","campo","type","name","value","checked","onChange","htmlFor","query","user","_c","propTypes","array","isRequired","bool","$RefreshReg$"],"sources":["C:/Users/Alessandro/Code/web-projects/test-site/Progetto Ingegneria/frontend/src/components/Accordion.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './Accordion.css';\r\nimport PatternList from '../View/PatternList';\r\nimport { getPatterns } from '../Model/Query';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nconst Accordion = ({ items, keepOthersOpen }) => {\r\n  const [accordionItems, setAccordionItems] = useState(null);\r\n  const [filtri, setFiltri] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (items) {\r\n      setAccordionItems(items.map(item => ({\r\n        ...item,\r\n        toggled: false,\r\n        checkedItems: new Array(item.campi.length).fill(false) // Inizializza lo stato delle checkbox\r\n      })));\r\n    }\r\n  }, [items]);\r\n\r\n  const handleAccordionToggle = (clickedItem) => {\r\n    setAccordionItems(accordionItems.map((item) => {\r\n      let toggled = item.toggled;\r\n\r\n      if (clickedItem.id === item.id) {\r\n        toggled = !item.toggled;\r\n      } else if (!keepOthersOpen) {\r\n        toggled = false;\r\n      }\r\n\r\n      return {\r\n        ...item,\r\n        toggled\r\n      };\r\n    }));\r\n  };\r\n\r\n  const handleCheckboxChange = (itemId, index) => {\r\n    setAccordionItems(accordionItems.map((item) => {\r\n      if (item.id === itemId) {\r\n        const checkedItems = [...item.checkedItems];\r\n        checkedItems[index] = !checkedItems[index];\r\n\r\n        // Aggiorna i filtri\r\n        const updatedFiltri = filtri.filter(filtro => filtro.label !== item.label);\r\n        const selectedFields = checkedItems.reduce((acc, isChecked, i) => {\r\n          if (isChecked) {\r\n            acc.push(item.campi[i]);\r\n          }\r\n          return acc;\r\n        }, []);\r\n\r\n        if (selectedFields.length > 0) {\r\n          updatedFiltri.push({\r\n            label: item.label,\r\n            checkedItems: selectedFields\r\n          });\r\n        }\r\n\r\n        setFiltri(updatedFiltri);\r\n\r\n        return {\r\n          ...item,\r\n          checkedItems\r\n        };\r\n      }\r\n      return item;\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div className='container'>\r\n      <div className='side-menu'>\r\n        Filtra i pattern per le tue esigenze\r\n        <div className='accordion-parent'>\r\n          {accordionItems?.map((listItem, key) => (\r\n            <div className={`accordion ${listItem.toggled ? 'toggled' : ''}`} key={key}>\r\n              <button className='toggle' onClick={() => handleAccordionToggle(listItem)}>\r\n                <p>{listItem.label}</p>\r\n                <div className='direction-indicator'>{listItem.toggled ? '-' : '+'}</div>\r\n              </button>\r\n              <div className='content-parent'>\r\n                <div className='content'>\r\n                  {listItem.toggled && (\r\n                    <div>\r\n                      {listItem.campi.map((campo, index) => (\r\n                        <div key={index}>\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            id={`${campo}-${index}`}\r\n                            name={campo}\r\n                            value={campo}\r\n                            checked={listItem.checkedItems[index]}\r\n                            onChange={() => handleCheckboxChange(listItem.id, index)}\r\n                            className=\"custom-checkbox\"\r\n                          />\r\n                          <label htmlFor={`${campo}-${index}`} className=\"custom-checkbox-label\">\r\n                            <span>{campo}</span>\r\n                          </label>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <PatternList filtri={filtri} query={getPatterns} user={null} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Accordion;\r\n\r\nAccordion.propTypes = {\r\n  items: PropTypes.array.isRequired,\r\n  keepOthersOpen: PropTypes.bool.isRequired\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}