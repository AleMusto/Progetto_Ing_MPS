{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alessandro\\\\Code\\\\web-projects\\\\test-site\\\\Progetto Ingegneria\\\\frontend\\\\src\\\\helpers.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { PropTypes } from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const storeUser = data => {\n  localStorage.setItem('user', JSON.stringify({\n    username: data.user.username,\n    jwt: data.jwt,\n    role: data.role,\n    userId: data.user.id\n  }));\n};\nexport const userData = () => {\n  const stringifiedUser = localStorage.getItem('user') || '\"\"';\n  return JSON.parse(stringifiedUser || {});\n};\nexport const Protector = ({\n  Component\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    jwt\n  } = userData();\n  useEffect(() => {\n    if (!jwt) navigate('/login');\n  }, [navigate, jwt]);\n  return /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 10\n  }, this);\n};\n_s(Protector, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = Protector;\nProtector.propTypes = {\n  Component: PropTypes.element.isRequired\n};\nexport const getCampiUnici = data => {\n  const fields = {};\n  data.forEach(item => {\n    Object.entries(item.attributes).forEach(([field, value]) => {\n      // Skip the 'user' and 'pattern-buffers' field\n      if (field === 'user' || field === 'pattern-buffers') {\n        return;\n      }\n      if (value !== null && value !== void 0 && value.data) {\n        const dataArray = Array.isArray(value.data) ? value.data : [value.data];\n        dataArray.forEach(nestedItem => {\n          Object.entries(nestedItem.attributes).forEach(([subField, subValue]) => {\n            if (subField === 'nome') {\n              if (!fields[field]) {\n                fields[field] = {\n                  values: new Set(),\n                  ids: new Set() // Utilizza un Set per tenere traccia degli ID unici\n                };\n              }\n              fields[field].values.add(subValue);\n              fields[field].ids.add(nestedItem.id); // Aggiungi l'id del sottocampo al Set\n            }\n          });\n        });\n      }\n    });\n  });\n\n  // Converte i Set in array prima di restituire i campi\n  Object.keys(fields).forEach(field => {\n    fields[field].ids = Array.from(fields[field].ids);\n  });\n  return fields;\n};\nexport const parseCampi = fields => {\n  const parsedArray = Object.entries(fields).map(([field, {\n    values,\n    ids\n  }], index) => {\n    return {\n      id: index,\n      label: field,\n      campi: Array.from(values).sort(),\n      id_campi: ids // Aggiungi l'array di id\n    };\n  });\n  return parsedArray;\n};\nexport const splitExamples = text => {\n  if (text === \"NA\") return [\"No examples\"];\n\n  // Divide il testo in base alle occorrenze di 'Example'\n  let examples = text.split('Example');\n\n  // Rimuovi il primo elemento dell'array che è una stringa vuota\n  examples.shift();\n\n  // Aggiungi 'Example' all'inizio di ogni elemento dell'array\n  examples = examples.map(example => 'Example ' + example.trim());\n  return examples;\n};\nvar _c;\n$RefreshReg$(_c, \"Protector\");","map":{"version":3,"names":["useEffect","useNavigate","PropTypes","jsxDEV","_jsxDEV","storeUser","data","localStorage","setItem","JSON","stringify","username","user","jwt","role","userId","id","userData","stringifiedUser","getItem","parse","Protector","Component","_s","navigate","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","element","isRequired","getCampiUnici","fields","forEach","item","Object","entries","attributes","field","value","dataArray","Array","isArray","nestedItem","subField","subValue","values","Set","ids","add","keys","from","parseCampi","parsedArray","map","index","label","campi","sort","id_campi","splitExamples","text","examples","split","shift","example","trim","$RefreshReg$"],"sources":["C:/Users/Alessandro/Code/web-projects/test-site/Progetto Ingegneria/frontend/src/helpers.js"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { PropTypes } from \"prop-types\";\r\n\r\nexport const storeUser = (data) => {\r\n  localStorage.setItem(\r\n    'user',\r\n    JSON.stringify({\r\n      username: data.user.username,\r\n      jwt: data.jwt,\r\n      role: data.role,\r\n      userId: data.user.id\r\n    })\r\n  )\r\n}\r\n\r\nexport const userData = () => {\r\n  const stringifiedUser = localStorage.getItem('user') || '\"\"';\r\n  return JSON.parse(stringifiedUser || {});\r\n}\r\n\r\nexport const Protector = ({Component}) => {\r\n  const navigate = useNavigate();\r\n  const {jwt} = userData();\r\n\r\n  useEffect(() => {\r\n    if (!jwt) navigate('/login');\r\n  }, [navigate, jwt]);\r\n\r\n  return <Component />;\r\n};\r\n\r\nProtector.propTypes = {\r\n  Component: PropTypes.element.isRequired\r\n}\r\n\r\nexport const getCampiUnici = (data) => {\r\n  const fields = {};\r\n\r\n  data.forEach(item => {\r\n    Object.entries(item.attributes).forEach(([field, value]) => {\r\n      // Skip the 'user' and 'pattern-buffers' field\r\n      if (field === 'user' || field === 'pattern-buffers') {\r\n        return;\r\n      }\r\n\r\n      if (value?.data) {\r\n        const dataArray = Array.isArray(value.data) ? value.data : [value.data];\r\n        dataArray.forEach(nestedItem => {\r\n          Object.entries(nestedItem.attributes).forEach(([subField, subValue]) => {\r\n            if (subField === 'nome') {\r\n              if (!fields[field]) {\r\n                fields[field] = {\r\n                  values: new Set(),\r\n                  ids: new Set() // Utilizza un Set per tenere traccia degli ID unici\r\n                };\r\n              }\r\n              fields[field].values.add(subValue);\r\n              fields[field].ids.add(nestedItem.id); // Aggiungi l'id del sottocampo al Set\r\n            }\r\n          });\r\n        });\r\n      }\r\n    });\r\n  });\r\n\r\n  // Converte i Set in array prima di restituire i campi\r\n  Object.keys(fields).forEach(field => {\r\n    fields[field].ids = Array.from(fields[field].ids);\r\n  });\r\n\r\n  return fields;\r\n}\r\n\r\nexport const parseCampi = (fields) => {\r\n  const parsedArray = Object.entries(fields).map(([field, { values, ids }], index) => {\r\n    return {\r\n      id: index,\r\n      label: field,\r\n      campi: Array.from(values).sort(),\r\n      id_campi: ids // Aggiungi l'array di id\r\n    };\r\n  });\r\n\r\n  return parsedArray;\r\n}\r\n\r\nexport const splitExamples = (text) => {\r\n  if (text === \"NA\") return [\"No examples\"];\r\n\r\n  // Divide il testo in base alle occorrenze di 'Example'\r\n  let examples = text.split('Example');\r\n  \r\n  // Rimuovi il primo elemento dell'array che è una stringa vuota\r\n  examples.shift();\r\n  \r\n  // Aggiungi 'Example' all'inizio di ogni elemento dell'array\r\n  examples = examples.map(example => 'Example ' + example.trim());\r\n  \r\n  return examples;\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}